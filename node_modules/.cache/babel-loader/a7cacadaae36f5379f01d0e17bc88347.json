{"ast":null,"code":"import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\n/** Tracing integration for graphql package */\n\nclass GraphQL {\n  constructor() {\n    GraphQL.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  static __initStatic() {\n    this.id = 'GraphQL';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  __init() {\n    this.name = GraphQL.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  setupOnce(_, getCurrentHub) {\n    var pkg = loadModule('graphql/execution/execute.js');\n\n    if (!pkg) {\n      logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    fill(pkg, 'execute', function (orig) {\n      return function () {\n        var scope = getCurrentHub().getScope();\n\n        var parentSpan = _optionalChain([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n\n        var span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: 'execute',\n          op: 'db.graphql'\n        })]);\n\n        _optionalChain([scope, 'optionalAccess', _6 => _6.setSpan, 'call', _7 => _7(span)]);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var rv = orig.call(this, ...args);\n\n        if (isThenable(rv)) {\n          return rv.then(res => {\n            _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n\n            _optionalChain([scope, 'optionalAccess', _10 => _10.setSpan, 'call', _11 => _11(parentSpan)]);\n\n            return res;\n          });\n        }\n\n        _optionalChain([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n\n        _optionalChain([scope, 'optionalAccess', _14 => _14.setSpan, 'call', _15 => _15(parentSpan)]);\n\n        return rv;\n      };\n    });\n  }\n\n}\n\nGraphQL.__initStatic();\n\nexport { GraphQL }; //# sourceMappingURL=graphql.js.map","map":null,"metadata":{},"sourceType":"module"}