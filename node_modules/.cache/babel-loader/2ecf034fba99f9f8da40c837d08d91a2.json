{"ast":null,"code":"var _jsxFileName = \"/home/pi/alarm_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isSending, setIsSending] = useState(false);\n  const [value, setValue] = React.useState(null);\n  const [buttonText, setButtonText] = React.useState(\"Submit\");\n  const isMounted = useRef(true); // set isMounted to false when we unmount the component\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    fetch('/alarmstatus').then(res => res.json()).then(data => {\n      if (Boolean(data.status)) {\n        setIsSending(true);\n        setButtonText(\"Waiting for wake up...\");\n      }\n    });\n  }, []);\n  const sendTimeRequest = useCallback(async () => {\n    // don't send again while we are sending\n    if (isSending) return; // update state\n\n    setIsSending(true); //Change button text\n\n    setButtonText(\"Waiting for wake up...\"); // send the actual request\n\n    await fetch('/setalarmclock', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        time: value\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    }); // once the request is sent, update state again\n\n    if (isMounted.current) // only update if we are still mounted\n      setIsSending(false);\n  }, [isSending, value]); // update the callback if the state changes\n\n  const sendCancelRequest = useCallback(async () => {\n    // don't send again while we are sending\n    if (!isSending) return; //GET to cancel current alarm and set to original state\n\n    fetch('/alarmcancel').then(res => res.json()).then(data => {\n      setButtonText(\"Submit\");\n      setIsSending(false);\n    });\n  }, [isSending]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(TimePicker, {\n            label: \"Wake Up Time: \",\n            value: value,\n            onChange: newValue => {\n              setValue(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disabled: isSending,\n            onClick: sendTimeRequest,\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disabled: !isSending,\n            onClick: sendCancelRequest,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZJ9K1tX+lnUW+jYQmjl+vDLv8sQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","TextField","AdapterDateFns","LocalizationProvider","TimePicker","Button","Stack","App","isSending","setIsSending","value","setValue","buttonText","setButtonText","isMounted","current","fetch","then","res","json","data","Boolean","status","sendTimeRequest","method","headers","body","JSON","stringify","time","console","log","sendCancelRequest","minHeight","newValue","params"],"sources":["/home/pi/alarm_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nfunction App() {\n  const [isSending, setIsSending] = useState(false)\n  const [value, setValue] = React.useState(null);\n  const [buttonText, setButtonText] = React.useState(\"Submit\");\n  const isMounted = useRef(true)\n\n  // set isMounted to false when we unmount the component\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    fetch('/alarmstatus').then(res => res.json()).then(data => {\n      if(Boolean(data.status)){\n        setIsSending(true);\n        setButtonText(\"Waiting for wake up...\")\n      }\n    });\n  }, []);\n\n  const sendTimeRequest = useCallback(async () => {\n    // don't send again while we are sending\n    if (isSending) return\n    // update state\n    setIsSending(true)\n    //Change button text\n    setButtonText(\"Waiting for wake up...\")\n    // send the actual request\n    await fetch('/setalarmclock', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({time: value})\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n\n    // once the request is sent, update state again\n    if (isMounted.current) // only update if we are still mounted\n      setIsSending(false)\n  }, [isSending,value]) // update the callback if the state changes\n\n  const sendCancelRequest = useCallback(async () => {\n    // don't send again while we are sending\n    if (!isSending) return\n    //GET to cancel current alarm and set to original state\n    fetch('/alarmcancel').then(res => res.json()).then(data => {\n      setButtonText(\"Submit\")\n      setIsSending(false)\n    });\n\n  }, [isSending])\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      style={{ minHeight: '100vh' }}\n    >\n      <Grid item xs={3}>\n        <Stack direction=\"row\">\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <TimePicker\n                  label=\"Wake Up Time: \"\n                  value={value}\n                  onChange={(newValue) => {\n                    setValue(newValue);\n                  }}\n                  renderInput={(params) => <TextField {...params} />}\n                />\n          </LocalizationProvider>\n          <Stack direction=\"row\">\n            <Button variant=\"contained\" disabled={isSending} onClick={sendTimeRequest}>{buttonText}</Button>\n            <Button variant=\"contained\" disabled={!isSending} onClick={sendCancelRequest}>Cancel</Button>\n          </Stack>\n        </Stack>\n      </Grid>\n    </Grid>\n  )\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}