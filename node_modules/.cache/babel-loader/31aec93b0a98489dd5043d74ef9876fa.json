{"ast":null,"code":"import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","map":{"version":3,"names":["toDate","startOfUTCWeek","startOfUTCWeekYear","MILLISECONDS_IN_WEEK","getUTCWeek","dirtyDate","options","arguments","length","TypeError","date","diff","getTime","Math","round"],"sources":["/home/pi/alarm_app/node_modules/@mui/x-date-pickers/node_modules/date-fns/esm/_lib/getUTCWeek/index.js"],"sourcesContent":["import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,IAAIC,oBAAoB,GAAG,SAA3B,C,CAAsC;AACtC;;AAEA,eAAe,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwC;EACrD,IAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;IACxB,MAAM,IAAIC,SAAJ,CAAc,mCAAmCF,SAAS,CAACC,MAA7C,GAAsD,UAApE,CAAN;EACD;;EAED,IAAIE,IAAI,GAAGV,MAAM,CAACK,SAAD,CAAjB;EACA,IAAIM,IAAI,GAAGV,cAAc,CAACS,IAAD,EAAOJ,OAAP,CAAd,CAA8BM,OAA9B,KAA0CV,kBAAkB,CAACQ,IAAD,EAAOJ,OAAP,CAAlB,CAAkCM,OAAlC,EAArD,CANqD,CAM6C;EAClG;EACA;;EAEA,OAAOC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAGR,oBAAlB,IAA0C,CAAjD;AACD"},"metadata":{},"sourceType":"module"}