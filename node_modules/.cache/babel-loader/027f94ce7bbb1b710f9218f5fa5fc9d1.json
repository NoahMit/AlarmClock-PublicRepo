{"ast":null,"code":"import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\n/** Tracing integration for node-postgres package */\n\nclass Postgres {\n  /**\n   * @inheritDoc\n   */\n  static __initStatic() {\n    this.id = 'Postgres';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  __init() {\n    this.name = Postgres.id;\n  }\n\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    ;\n\n    Postgres.prototype.__init.call(this);\n\n    this._usePgNative = !!options.usePgNative;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  setupOnce(_, getCurrentHub) {\n    var pkg = loadModule('pg');\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    if (this._usePgNative && !_optionalChain([pkg, 'access', _2 => _2.native, 'optionalAccess', _3 => _3.Client])) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n\n    const {\n      Client\n    } = this._usePgNative ? pkg.native : pkg;\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n\n    fill(Client.prototype, 'query', function (orig) {\n      return function (config, values, callback) {\n        var scope = getCurrentHub().getScope();\n\n        var parentSpan = _optionalChain([scope, 'optionalAccess', _4 => _4.getSpan, 'call', _5 => _5()]);\n\n        var span = _optionalChain([parentSpan, 'optionalAccess', _6 => _6.startChild, 'call', _7 => _7({\n          description: typeof config === 'string' ? config : config.text,\n          op: 'db'\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            _optionalChain([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n\n            values(err, result);\n          });\n        }\n\n        var rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return rv.then(res => {\n            _optionalChain([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n\n            return res;\n          });\n        }\n\n        _optionalChain([span, 'optionalAccess', _14 => _14.finish, 'call', _15 => _15()]);\n\n        return rv;\n      };\n    });\n  }\n\n}\n\nPostgres.__initStatic();\n\nexport { Postgres }; //# sourceMappingURL=postgres.js.map","map":null,"metadata":{},"sourceType":"module"}