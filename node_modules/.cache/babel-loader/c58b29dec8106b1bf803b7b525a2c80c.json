{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'le ore',\n  minutes: 'i minuti',\n  seconds: 'i secondi'\n}; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst itITPickers = {\n  // Calendar navigation\n  previousMonth: 'Mese precedente',\n  nextMonth: 'Mese successivo',\n  // View navigation\n  openPreviousView: 'apri la vista precedente',\n  openNextView: 'apri la vista successiva',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? \"la vista dell'anno è aperta, passare alla vista del calendario\" : \"la vista dell'calendario è aperta, passare alla vista dell'anno\",\n  // DateRange placeholders\n  start: 'Inizio',\n  end: 'Fine',\n  // Action bar\n  cancelButtonLabel: 'Cancellare',\n  clearButtonLabel: 'Sgomberare',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Oggi',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Seleziona ${views[view]}. ${time === null ? 'Nessun orario selezionato' : `L'ora selezionata è ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} ore`,\n  minutesClockNumberText: minutes => `${minutes} minuti`,\n  secondsClockNumberText: seconds => `${seconds} secondi`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Scegli la data, la data selezionata è ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Scegli la data',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Scegli l'ora, l'ora selezionata è ${utils.format(utils.date(rawValue), 'fullTime')}` : \"Scegli l'ora\",\n  // Table labels\n  timeTableLabel: 'scegli un ora',\n  dateTableLabel: 'scegli una data'\n};\nexport const itIT = getPickersLocalization(itITPickers);","map":null,"metadata":{},"sourceType":"module"}