{"ast":null,"code":"import { getOriginalFunction } from '@sentry/utils';\nlet originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\n\nclass FunctionToString {\n  constructor() {\n    FunctionToString.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  static __initStatic() {\n    this.id = 'FunctionToString';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  __init() {\n    this.name = FunctionToString.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  setupOnce() {\n    originalFunctionToString = Function.prototype.toString;\n\n    Function.prototype.toString = function () {\n      var context = getOriginalFunction(this) || this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n\n}\n\nFunctionToString.__initStatic();\n\nexport { FunctionToString }; //# sourceMappingURL=functiontostring.js.map","map":null,"metadata":{},"sourceType":"module"}